# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

jobs:
    tests:
        macos:
            xcode: 12.0.1 # Specify the Xcode version to use
        shell: /bin/bash --login -o pipefail
        steps:
            - checkout
            - restore_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
            - run: |
                gem install bundler
                bundle install --path vendor/bundle
            - save_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle

            - run: bundle exec pod install
            - run: ruby -v

            - run:
                name: fastlane
                command: bundle exec fastlane tests --verbose

    alternateTests:
        macos:
            xcode: 12.0.1 # Specify the Xcode version to use
        shell: /bin/bash --login -o pipefail
        steps:
            - checkout
            - restore_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
            - run: |
                gem install bundler
                bundle check || bundle install --path vendor/bundle
            - save_cache:
                key: 1-gems-{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle

            - run: bundle exec pod install

            - run:
                name: fastlane
                command: bundle exec fastlane alternateTests

workflows:
    version: 2

    feature-branch:
        jobs:
            - tests:
                filters:
                    branches:
                        only:
                            - /feature-.*/


    develop-branch:
        jobs:
            - tests:
                filters:
                    branches:
                        only:
                            - develop

            - alternateTests:
                filters:
                    branches:
                        only:
                            - develop
    nightly:
        triggers:
            - schedule:
                cron: "40 3 * * *"
                filters:
                    branches:
                        only:
                            - develop
        jobs:
            - tests
